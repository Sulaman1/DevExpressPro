@using DevExpress.AspNetCore
@using DevExpress.XtraReports.UI

@model WebEFCoreApp.Models.CustomDesignerModel
@{
    var designerRender = Html.DevExpress().ReportDesigner("reportDesigner")
    .Height("100%")
    .Bind(Model.DesignerModel);
    //.DataSources(configureDS => { configureDS.Add("Test", Model.DesignerModel); });
    //.DataSources(configureDS => { configureDS.Add("Test", "SOmeObject"); });
    @designerRender.RenderHtml()
}


@section Scripts {
    <link href="~/css/dx-reporting-skeleton-screen.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/viewer.part.bundle.css" />
    <link rel="stylesheet" href="~/css/designer.part.bundle.css" />
    <link rel="stylesheet" href="~/css/dx.material.blue.light.bundle.css" />

    <script src="~/js/reporting.thirdparty.bundle.js"></script>
    <script src="~/js/viewer.part.bundle.js"></script>
    <script src="~/js/designer.part.bundle.js"></script>

    @designerRender.RenderScripts()
}

@*
@using DevExpress.AspNetCore
@using DevExpress.XtraReports.UI

@model DXWebApplication1.Models.CustomDesignerModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(this.Context).RequestToken;
    }
}
<script>
    function DesignerBeforeRender(args) {
        var designer = args.designerModel;
        SetupJwt('you can pass bearer here', "@GetAntiXsrfRequestToken()");
        $(window).on('beforeunload', function (e) {
            if (designer.isDirty()) {
                designer.navigateByReports.closeAll().done(function () {
                    return;
                });
                return "Designer has changes";
            }
        });
    }

    function CustomizeLocalization(s, e) {
        //e.LoadMessages($.get("/localization/reporting/dx-analytics-core.de.json"));
        //e.LoadMessages($.get("/localization/reporting/dx-reporting.de.json"));
        e.LoadMessages($.get("/localization/devextreme/de.json").done(function (messages) { DevExpress.localization.loadMessages(messages); }));
        e.SetAvailableCultures(["de"]);
    }
    function Exit() {
        window.location = "/";
    }
</script>
<input type="hidden" id="RequestVerificationToken" name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">
@{
    ViewData["Title"] = Model.Title;
    var designerRender = Html.DevExpress().ReportDesigner("ReportDesigner")
        .Height("100%");
        // .ClientSideModelSettings(clientSide =>
        // {
        //     clientSide.IncludeLocalization = false;
        //     clientSide.IncludeCldrData = false;
        //     clientSide.IncludeCldrSupplemental = false;
        // })
        // .ClientSideEvents(events =>
        // {
        //     events
        //         .CustomizeLocalization("CustomizeLocalization")
        //         .BeforeRender("DesignerBeforeRender")
        //         .ExitDesigner("Exit");
        // });

    designerRender.Bind(Model.DesignerModel);

    @:@designerRender.RenderHtml()

}

@section Scripts {
    <link href="~/css/dx-reporting-skeleton-screen.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/viewer.part.bundle.css" />
    <link rel="stylesheet" href="~/css/designer.part.bundle.css" />

    <script src="~/js/reporting.thirdparty.bundle.js"></script>
    <script src="~/js/viewer.part.bundle.js"></script>
    <script src="~/js/designer.part.bundle.js"></script>
    @designerRender.RenderScripts()
}

 *@